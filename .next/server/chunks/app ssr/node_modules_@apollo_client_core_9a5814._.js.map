{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/types.js"],"sourcesContent":[";\nexport {};\n//# sourceMappingURL=types.js.map"],"names":[],"mappings":";;CAEA,iCAAiC"}},
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/networkStatus.js"],"sourcesContent":["export var NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nexport function isNetworkRequestInFlight(networkStatus) {\n    return networkStatus ? networkStatus < 7 : false;\n}\nexport function isNetworkRequestSettled(networkStatus) {\n    return networkStatus === 7 || networkStatus === 8;\n}\n//# sourceMappingURL=networkStatus.js.map"],"names":[],"mappings":";;;;;AAAO,IAAI;AACX,CAAC,SAAU,aAAa;IACpB,aAAa,CAAC,aAAa,CAAC,UAAU,GAAG,EAAE,GAAG;IAC9C,aAAa,CAAC,aAAa,CAAC,eAAe,GAAG,EAAE,GAAG;IACnD,aAAa,CAAC,aAAa,CAAC,YAAY,GAAG,EAAE,GAAG;IAChD,aAAa,CAAC,aAAa,CAAC,UAAU,GAAG,EAAE,GAAG;IAC9C,aAAa,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,GAAG;IAC3C,aAAa,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,GAAG;IAC5C,aAAa,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,GAAG;AAChD,CAAC,EAAE,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;AAChC,SAAS,yBAAyB,aAAa;IAClD,OAAO,gBAAgB,gBAAgB,IAAI;AAC/C;AACO,SAAS,wBAAwB,aAAa;IACjD,OAAO,kBAAkB,KAAK,kBAAkB;AACpD,EACA,yCAAyC"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/equalByQuery.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport equal from \"@wry/equality\";\nimport { createFragmentMap, getFragmentDefinitions, getFragmentFromSelection, getMainDefinition, isField, resultKeyNameFromField, shouldInclude, } from \"../utilities/index.js\";\nexport function equalByQuery(query, _a, _b, variables) {\n    var aData = _a.data, aRest = __rest(_a, [\"data\"]);\n    var bData = _b.data, bRest = __rest(_b, [\"data\"]);\n    return (equal(aRest, bRest) &&\n        equalBySelectionSet(getMainDefinition(query).selectionSet, aData, bData, {\n            fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n            variables: variables,\n        }));\n}\nfunction equalBySelectionSet(selectionSet, aResult, bResult, context) {\n    if (aResult === bResult) {\n        return true;\n    }\n    var seenSelections = new Set();\n    return selectionSet.selections.every(function (selection) {\n        if (seenSelections.has(selection))\n            return true;\n        seenSelections.add(selection);\n        if (!shouldInclude(selection, context.variables))\n            return true;\n        if (selectionHasNonreactiveDirective(selection))\n            return true;\n        if (isField(selection)) {\n            var resultKey = resultKeyNameFromField(selection);\n            var aResultChild = aResult && aResult[resultKey];\n            var bResultChild = bResult && bResult[resultKey];\n            var childSelectionSet = selection.selectionSet;\n            if (!childSelectionSet) {\n                return equal(aResultChild, bResultChild);\n            }\n            var aChildIsArray = Array.isArray(aResultChild);\n            var bChildIsArray = Array.isArray(bResultChild);\n            if (aChildIsArray !== bChildIsArray)\n                return false;\n            if (aChildIsArray && bChildIsArray) {\n                var length_1 = aResultChild.length;\n                if (bResultChild.length !== length_1) {\n                    return false;\n                }\n                for (var i = 0; i < length_1; ++i) {\n                    if (!equalBySelectionSet(childSelectionSet, aResultChild[i], bResultChild[i], context)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return equalBySelectionSet(childSelectionSet, aResultChild, bResultChild, context);\n        }\n        else {\n            var fragment = getFragmentFromSelection(selection, context.fragmentMap);\n            if (fragment) {\n                if (selectionHasNonreactiveDirective(fragment))\n                    return true;\n                return equalBySelectionSet(fragment.selectionSet, aResult, bResult, context);\n            }\n        }\n    });\n}\nfunction selectionHasNonreactiveDirective(selection) {\n    return (!!selection.directives && selection.directives.some(directiveIsNonreactive));\n}\nfunction directiveIsNonreactive(dir) {\n    return dir.name.value === \"nonreactive\";\n}\n//# sourceMappingURL=equalByQuery.js.map"],"names":[],"mappings":";;;;;;;;;;AAGO,SAAS,aAAa,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS;IACjD,IAAI,QAAQ,GAAG,IAAI,EAAE,QAAQ,6HAAO,IAAI;QAAC;KAAO;IAChD,IAAI,QAAQ,GAAG,IAAI,EAAE,QAAQ,6HAAO,IAAI;QAAC;KAAO;IAChD,OAAQ,yIAAM,OAAO,UACjB,oBAAoB,0JAAkB,OAAO,YAAY,EAAE,OAAO,OAAO;QACrE,aAAa,0JAAkB,+JAAuB;QACtD,WAAW;IACf;AACR;AACA,SAAS,oBAAoB,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAChE,IAAI,YAAY,SAAS;QACrB,OAAO;IACX;IACA,IAAI,iBAAiB,IAAI;IACzB,OAAO,aAAa,UAAU,CAAC,KAAK,CAAC,SAAU,SAAS;QACpD,IAAI,eAAe,GAAG,CAAC,YACnB,OAAO;QACX,eAAe,GAAG,CAAC;QACnB,IAAI,CAAC,sJAAc,WAAW,QAAQ,SAAS,GAC3C,OAAO;QACX,IAAI,iCAAiC,YACjC,OAAO;QACX,IAAI,gJAAQ,YAAY;YACpB,IAAI,YAAY,+JAAuB;YACvC,IAAI,eAAe,WAAW,OAAO,CAAC,UAAU;YAChD,IAAI,eAAe,WAAW,OAAO,CAAC,UAAU;YAChD,IAAI,oBAAoB,UAAU,YAAY;YAC9C,IAAI,CAAC,mBAAmB;gBACpB,OAAO,yIAAM,cAAc;YAC/B;YACA,IAAI,gBAAgB,MAAM,OAAO,CAAC;YAClC,IAAI,gBAAgB,MAAM,OAAO,CAAC;YAClC,IAAI,kBAAkB,eAClB,OAAO;YACX,IAAI,iBAAiB,eAAe;gBAChC,IAAI,WAAW,aAAa,MAAM;gBAClC,IAAI,aAAa,MAAM,KAAK,UAAU;oBAClC,OAAO;gBACX;gBACA,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,EAAE,EAAG;oBAC/B,IAAI,CAAC,oBAAoB,mBAAmB,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,UAAU;wBACpF,OAAO;oBACX;gBACJ;gBACA,OAAO;YACX;YACA,OAAO,oBAAoB,mBAAmB,cAAc,cAAc;QAC9E,OACK;YACD,IAAI,WAAW,iKAAyB,WAAW,QAAQ,WAAW;YACtE,IAAI,UAAU;gBACV,IAAI,iCAAiC,WACjC,OAAO;gBACX,OAAO,oBAAoB,SAAS,YAAY,EAAE,SAAS,SAAS;YACxE;QACJ;IACJ;AACJ;AACA,SAAS,iCAAiC,SAAS;IAC/C,OAAQ,CAAC,CAAC,UAAU,UAAU,IAAI,UAAU,UAAU,CAAC,IAAI,CAAC;AAChE;AACA,SAAS,uBAAuB,GAAG;IAC/B,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK;AAC9B,EACA,wCAAwC"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/ObservableQuery.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { invariant } from '../utilities/globals/index.js';\nimport { equal } from '@wry/equality';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus.js';\nimport { cloneDeep, compact, getOperationDefinition, Observable, iterateObserversSafely, fixObservableSubclass, getQueryDefinition, } from '../utilities/index.js';\nimport { equalByQuery } from './equalByQuery.js';\nvar assign = Object.assign, hasOwnProperty = Object.hasOwnProperty;\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, queryInfo = _a.queryInfo, options = _a.options;\n        var _this = _super.call(this, function (observer) {\n            try {\n                var subObserver = observer._subscription._observer;\n                if (subObserver && !subObserver.error) {\n                    subObserver.error = defaultSubscriptionObserverErrorCallback;\n                }\n            }\n            catch (_a) { }\n            var first = !_this.observers.size;\n            _this.observers.add(observer);\n            var last = _this.last;\n            if (last && last.error) {\n                observer.error && observer.error(last.error);\n            }\n            else if (last && last.result) {\n                observer.next && observer.next(last.result);\n            }\n            if (first) {\n                _this.reobserve().catch(function () { });\n            }\n            return function () {\n                if (_this.observers.delete(observer) && !_this.observers.size) {\n                    _this.tearDownQuery();\n                }\n            };\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.queryInfo = queryInfo;\n        _this.queryManager = queryManager;\n        _this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy);\n        _this.isTornDown = false;\n        var _b = queryManager.defaultOptions.watchQuery, _c = _b === void 0 ? {} : _b, _d = _c.fetchPolicy, defaultFetchPolicy = _d === void 0 ? \"cache-first\" : _d;\n        var _e = options.fetchPolicy, fetchPolicy = _e === void 0 ? defaultFetchPolicy : _e, _f = options.initialFetchPolicy, initialFetchPolicy = _f === void 0 ? (fetchPolicy === \"standby\" ? defaultFetchPolicy : fetchPolicy) : _f;\n        _this.options = __assign(__assign({}, options), { initialFetchPolicy: initialFetchPolicy, fetchPolicy: fetchPolicy });\n        _this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n        var opDef = getOperationDefinition(_this.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        return _this;\n    }\n    Object.defineProperty(ObservableQuery.prototype, \"query\", {\n        get: function () {\n            return this.lastQuery || this.options.query;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObservableQuery.prototype, \"variables\", {\n        get: function () {\n            return this.options.variables;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.getCurrentResult = function (saveAsLastResult) {\n        if (saveAsLastResult === void 0) { saveAsLastResult = true; }\n        var lastResult = this.getLastResult(true);\n        var networkStatus = this.queryInfo.networkStatus ||\n            (lastResult && lastResult.networkStatus) ||\n            NetworkStatus.ready;\n        var result = __assign(__assign({}, lastResult), { loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus });\n        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a;\n        if (skipCacheDataFor(fetchPolicy) ||\n            this.queryManager.getDocumentInfo(this.query).hasForcedResolvers) {\n        }\n        else if (this.waitForOwnResult) {\n            this.queryInfo['updateWatch']();\n        }\n        else {\n            var diff = this.queryInfo.getDiff();\n            if (diff.complete || this.options.returnPartialData) {\n                result.data = diff.result;\n            }\n            if (equal(result.data, {})) {\n                result.data = void 0;\n            }\n            if (diff.complete) {\n                delete result.partial;\n                if (diff.complete &&\n                    result.networkStatus === NetworkStatus.loading &&\n                    (fetchPolicy === 'cache-first' ||\n                        fetchPolicy === 'cache-only')) {\n                    result.networkStatus = NetworkStatus.ready;\n                    result.loading = false;\n                }\n            }\n            else {\n                result.partial = true;\n            }\n            if (globalThis.__DEV__ !== false &&\n                !diff.complete &&\n                !this.options.partialRefetch &&\n                !result.loading &&\n                !result.data &&\n                !result.error) {\n                logMissingFieldErrors(diff.missing);\n            }\n        }\n        if (saveAsLastResult) {\n            this.updateLastResult(result);\n        }\n        return result;\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult, variables) {\n        if (!this.last) {\n            return true;\n        }\n        var resultIsDifferent = this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective\n            ? !equalByQuery(this.query, this.last.result, newResult, this.variables)\n            : !equal(this.last.result, newResult);\n        return (resultIsDifferent ||\n            (variables && !equal(this.last.variables, variables)));\n    };\n    ObservableQuery.prototype.getLast = function (key, variablesMustMatch) {\n        var last = this.last;\n        if (last &&\n            last[key] &&\n            (!variablesMustMatch || equal(last.variables, this.variables))) {\n            return last[key];\n        }\n    };\n    ObservableQuery.prototype.getLastResult = function (variablesMustMatch) {\n        return this.getLast(\"result\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.getLastError = function (variablesMustMatch) {\n        return this.getLast(\"error\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.last;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        this.queryManager.resetErrors(this.queryId);\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var _a;\n        var reobserveOptions = {\n            pollInterval: 0,\n        };\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-and-network') {\n            reobserveOptions.fetchPolicy = fetchPolicy;\n        }\n        else if (fetchPolicy === 'no-cache') {\n            reobserveOptions.fetchPolicy = 'no-cache';\n        }\n        else {\n            reobserveOptions.fetchPolicy = 'network-only';\n        }\n        if (globalThis.__DEV__ !== false && variables && hasOwnProperty.call(variables, \"variables\")) {\n            var queryDef = getQueryDefinition(this.query);\n            var vars = queryDef.variableDefinitions;\n            if (!vars || !vars.some(function (v) { return v.variable.name.value === \"variables\"; })) {\n                globalThis.__DEV__ !== false && invariant.warn(\n                    18,\n                    variables,\n                    ((_a = queryDef.name) === null || _a === void 0 ? void 0 : _a.value) || queryDef\n                );\n            }\n        }\n        if (variables && !equal(this.options.variables, variables)) {\n            reobserveOptions.variables = this.options.variables = __assign(__assign({}, this.options.variables), variables);\n        }\n        this.queryInfo.resetLastWrite();\n        return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign(__assign({}, this.options), { query: this.options.query }), fetchMoreOptions), { variables: __assign(__assign({}, this.options.variables), fetchMoreOptions.variables) }))), { fetchPolicy: \"no-cache\" });\n        combinedOptions.query = this.transformDocument(combinedOptions.query);\n        var qid = this.queryManager.generateQueryId();\n        this.lastQuery = fetchMoreOptions.query\n            ? this.transformDocument(this.options.query)\n            : combinedOptions.query;\n        var queryInfo = this.queryInfo;\n        var originalNetworkStatus = queryInfo.networkStatus;\n        queryInfo.networkStatus = NetworkStatus.fetchMore;\n        if (combinedOptions.notifyOnNetworkStatusChange) {\n            this.observe();\n        }\n        var updatedQuerySet = new Set();\n        return this.queryManager.fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore).then(function (fetchMoreResult) {\n            _this.queryManager.removeQuery(qid);\n            if (queryInfo.networkStatus === NetworkStatus.fetchMore) {\n                queryInfo.networkStatus = originalNetworkStatus;\n            }\n            _this.queryManager.cache.batch({\n                update: function (cache) {\n                    var updateQuery = fetchMoreOptions.updateQuery;\n                    if (updateQuery) {\n                        cache.updateQuery({\n                            query: _this.query,\n                            variables: _this.variables,\n                            returnPartialData: true,\n                            optimistic: false,\n                        }, function (previous) { return updateQuery(previous, {\n                            fetchMoreResult: fetchMoreResult.data,\n                            variables: combinedOptions.variables,\n                        }); });\n                    }\n                    else {\n                        cache.writeQuery({\n                            query: combinedOptions.query,\n                            variables: combinedOptions.variables,\n                            data: fetchMoreResult.data,\n                        });\n                    }\n                },\n                onWatchUpdated: function (watch) {\n                    updatedQuerySet.add(watch.query);\n                },\n            });\n            return fetchMoreResult;\n        }).finally(function () {\n            if (!updatedQuerySet.has(_this.query)) {\n                reobserveCacheFirst(_this);\n            }\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n            context: options.context,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                globalThis.__DEV__ !== false && invariant.error(19, err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (newOptions) {\n        return this.reobserve(newOptions);\n    };\n    ObservableQuery.prototype.silentSetOptions = function (newOptions) {\n        var mergedOptions = compact(this.options, newOptions || {});\n        assign(this.options, mergedOptions);\n    };\n    ObservableQuery.prototype.setVariables = function (variables) {\n        if (equal(this.variables, variables)) {\n            return this.observers.size\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.reobserve({\n            fetchPolicy: this.options.initialFetchPolicy,\n            variables: variables,\n        }, NetworkStatus.setVariables);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var result = queryManager.cache.diff({\n            query: this.options.query,\n            variables: this.variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n        var newResult = mapFn(result, {\n            variables: this.variables,\n        });\n        if (newResult) {\n            queryManager.cache.writeQuery({\n                query: this.options.query,\n                data: newResult,\n                variables: this.variables,\n            });\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        this.options.pollInterval = pollInterval;\n        this.updatePolling();\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.options.pollInterval = 0;\n        this.updatePolling();\n    };\n    ObservableQuery.prototype.applyNextFetchPolicy = function (reason, options) {\n        if (options.nextFetchPolicy) {\n            var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a, _b = options.initialFetchPolicy, initialFetchPolicy = _b === void 0 ? fetchPolicy : _b;\n            if (fetchPolicy === \"standby\") {\n            }\n            else if (typeof options.nextFetchPolicy === \"function\") {\n                options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {\n                    reason: reason,\n                    options: options,\n                    observable: this,\n                    initialFetchPolicy: initialFetchPolicy,\n                });\n            }\n            else if (reason === \"variables-changed\") {\n                options.fetchPolicy = initialFetchPolicy;\n            }\n            else {\n                options.fetchPolicy = options.nextFetchPolicy;\n            }\n        }\n        return options.fetchPolicy;\n    };\n    ObservableQuery.prototype.fetch = function (options, newNetworkStatus) {\n        this.queryManager.setObservableQuery(this);\n        return this.queryManager['fetchConcastWithInfo'](this.queryId, options, newNetworkStatus);\n    };\n    ObservableQuery.prototype.updatePolling = function () {\n        var _this = this;\n        if (this.queryManager.ssrMode) {\n            return;\n        }\n        var _a = this, pollingInfo = _a.pollingInfo, pollInterval = _a.options.pollInterval;\n        if (!pollInterval) {\n            if (pollingInfo) {\n                clearTimeout(pollingInfo.timeout);\n                delete this.pollingInfo;\n            }\n            return;\n        }\n        if (pollingInfo &&\n            pollingInfo.interval === pollInterval) {\n            return;\n        }\n        invariant(pollInterval, 20);\n        var info = pollingInfo || (this.pollingInfo = {});\n        info.interval = pollInterval;\n        var maybeFetch = function () {\n            if (_this.pollingInfo) {\n                if (!isNetworkRequestInFlight(_this.queryInfo.networkStatus)) {\n                    _this.reobserve({\n                        fetchPolicy: _this.options.initialFetchPolicy === 'no-cache' ? 'no-cache' : 'network-only',\n                    }, NetworkStatus.poll).then(poll, poll);\n                }\n                else {\n                    poll();\n                }\n            }\n            ;\n        };\n        var poll = function () {\n            var info = _this.pollingInfo;\n            if (info) {\n                clearTimeout(info.timeout);\n                info.timeout = setTimeout(maybeFetch, info.interval);\n            }\n        };\n        poll();\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult, variables) {\n        if (variables === void 0) { variables = this.variables; }\n        var error = this.getLastError();\n        if (error && this.last && !equal(variables, this.last.variables)) {\n            error = void 0;\n        }\n        return this.last = __assign({ result: this.queryManager.assumeImmutableResults\n                ? newResult\n                : cloneDeep(newResult), variables: variables }, (error ? { error: error } : null));\n    };\n    ObservableQuery.prototype.reobserveAsConcast = function (newOptions, newNetworkStatus) {\n        var _this = this;\n        this.isTornDown = false;\n        var useDisposableConcast = newNetworkStatus === NetworkStatus.refetch ||\n            newNetworkStatus === NetworkStatus.fetchMore ||\n            newNetworkStatus === NetworkStatus.poll;\n        var oldVariables = this.options.variables;\n        var oldFetchPolicy = this.options.fetchPolicy;\n        var mergedOptions = compact(this.options, newOptions || {});\n        var options = useDisposableConcast\n            ? mergedOptions\n            : assign(this.options, mergedOptions);\n        var query = this.transformDocument(options.query);\n        this.lastQuery = query;\n        if (!useDisposableConcast) {\n            this.updatePolling();\n            if (newOptions &&\n                newOptions.variables &&\n                !equal(newOptions.variables, oldVariables) &&\n                options.fetchPolicy !== \"standby\" &&\n                options.fetchPolicy === oldFetchPolicy) {\n                this.applyNextFetchPolicy(\"variables-changed\", options);\n                if (newNetworkStatus === void 0) {\n                    newNetworkStatus = NetworkStatus.setVariables;\n                }\n            }\n        }\n        var fetchOptions = query === options.query ? options : __assign(__assign({}, options), { query: query });\n        this.waitForOwnResult && (this.waitForOwnResult = skipCacheDataFor(fetchOptions.fetchPolicy));\n        var finishWaitingForOwnResult = function () {\n            if (_this.concast === concast) {\n                _this.waitForOwnResult = false;\n            }\n        };\n        var variables = fetchOptions.variables && __assign({}, fetchOptions.variables);\n        var _a = this.fetch(fetchOptions, newNetworkStatus), concast = _a.concast, fromLink = _a.fromLink;\n        var observer = {\n            next: function (result) {\n                finishWaitingForOwnResult();\n                _this.reportResult(result, variables);\n            },\n            error: function (error) {\n                finishWaitingForOwnResult();\n                _this.reportError(error, variables);\n            },\n        };\n        if (!useDisposableConcast && (fromLink || !this.concast)) {\n            if (this.concast && this.observer) {\n                this.concast.removeObserver(this.observer);\n            }\n            this.concast = concast;\n            this.observer = observer;\n        }\n        concast.addObserver(observer);\n        return concast;\n    };\n    ObservableQuery.prototype.reobserve = function (newOptions, newNetworkStatus) {\n        return this.reobserveAsConcast(newOptions, newNetworkStatus).promise;\n    };\n    ObservableQuery.prototype.observe = function () {\n        this.reportResult(this.getCurrentResult(false), this.variables);\n    };\n    ObservableQuery.prototype.reportResult = function (result, variables) {\n        var lastError = this.getLastError();\n        var isDifferent = this.isDifferentFromLastResult(result, variables);\n        if (lastError || !result.partial || this.options.returnPartialData) {\n            this.updateLastResult(result, variables);\n        }\n        if (lastError || isDifferent) {\n            iterateObserversSafely(this.observers, \"next\", result);\n        }\n    };\n    ObservableQuery.prototype.reportError = function (error, variables) {\n        var errorResult = __assign(__assign({}, this.getLastResult()), { error: error, errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false });\n        this.updateLastResult(errorResult, variables);\n        iterateObserversSafely(this.observers, 'error', this.last.error = error);\n    };\n    ObservableQuery.prototype.hasObservers = function () {\n        return this.observers.size > 0;\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        if (this.isTornDown)\n            return;\n        if (this.concast && this.observer) {\n            this.concast.removeObserver(this.observer);\n            delete this.concast;\n            delete this.observer;\n        }\n        this.stopPolling();\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        this.queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n        this.isTornDown = true;\n    };\n    ObservableQuery.prototype.transformDocument = function (document) {\n        return this.queryManager.transform(document);\n    };\n    return ObservableQuery;\n}(Observable));\nexport { ObservableQuery };\nfixObservableSubclass(ObservableQuery);\nexport function reobserveCacheFirst(obsQuery) {\n    var _a = obsQuery.options, fetchPolicy = _a.fetchPolicy, nextFetchPolicy = _a.nextFetchPolicy;\n    if (fetchPolicy === \"cache-and-network\" ||\n        fetchPolicy === \"network-only\") {\n        return obsQuery.reobserve({\n            fetchPolicy: \"cache-first\",\n            nextFetchPolicy: function () {\n                this.nextFetchPolicy = nextFetchPolicy;\n                if (typeof nextFetchPolicy === \"function\") {\n                    return nextFetchPolicy.apply(this, arguments);\n                }\n                return fetchPolicy;\n            },\n        });\n    }\n    return obsQuery.reobserve();\n}\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    globalThis.__DEV__ !== false && invariant.error(21, error.message, error.stack);\n}\nexport function logMissingFieldErrors(missing) {\n    if (globalThis.__DEV__ !== false && missing) {\n        globalThis.__DEV__ !== false && invariant.debug(22, missing);\n    }\n}\nfunction skipCacheDataFor(fetchPolicy) {\n    return fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\" || fetchPolicy === \"standby\";\n}\n//# sourceMappingURL=ObservableQuery.js.map"],"names":[],"mappings":"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"}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/LocalState.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant } from '../utilities/globals/index.js';\nimport { visit, BREAK, isSelectionNode } from 'graphql';\nimport { argumentsObjectFromField, buildQueryFromSelectionSet, createFragmentMap, getFragmentDefinitions, getMainDefinition, hasDirectives, isField, isInlineFragment, mergeDeep, mergeDeepArray, removeClientSetsFromDocument, resultKeyNameFromField, shouldInclude, } from '../utilities/index.js';\nimport { cacheSlot } from '../cache/index.js';\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.selectionsToResolveCache = new WeakMap();\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return removeClientSetsFromDocument(document);\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        var cache = this.cache;\n        return __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\n                return cache.identify(obj);\n            } });\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, selectionsToResolve, definitionOperation, defaultOperationType, _a, cache, client, execContext, isClientFieldDescendant;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                selectionsToResolve = this.collectSelectionsToResolve(mainDefinition, fragmentMap);\n                definitionOperation = mainDefinition.operation;\n                defaultOperationType = definitionOperation\n                    ? definitionOperation.charAt(0).toUpperCase() +\n                        definitionOperation.slice(1)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache, client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    selectionsToResolve: selectionsToResolve,\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                isClientFieldDescendant = false;\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, isClientFieldDescendant, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!isClientFieldDescendant && !execContext.selectionsToResolve.has(selection)) {\n                            return [2];\n                        }\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, isClientFieldDescendant, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            invariant(fragment, 16, selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, isClientFieldDescendant, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!rootValue) {\n                    return [2, null];\n                }\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(cacheSlot.withValue(this.cache, resolve, [\n                                rootValue,\n                                argumentsObjectFromField(field, variables),\n                                execContext.context,\n                                { field: field, fragmentMap: execContext.fragmentMap },\n                            ]));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        var _a, _b;\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        var isClientField = (_b = (_a = field.directives) === null || _a === void 0 ? void 0 : _a.some(function (d) { return d.name.value === 'client'; })) !== null && _b !== void 0 ? _b : false;\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, isClientFieldDescendant, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, isClientFieldDescendant, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant, item, execContext);\n            }\n        }));\n    };\n    LocalState.prototype.collectSelectionsToResolve = function (mainDefinition, fragmentMap) {\n        var isSingleASTNode = function (node) { return !Array.isArray(node); };\n        var selectionsToResolveCache = this.selectionsToResolveCache;\n        function collectByDefinition(definitionNode) {\n            if (!selectionsToResolveCache.has(definitionNode)) {\n                var matches_1 = new Set();\n                selectionsToResolveCache.set(definitionNode, matches_1);\n                visit(definitionNode, {\n                    Directive: function (node, _, __, ___, ancestors) {\n                        if (node.name.value === 'client') {\n                            ancestors.forEach(function (node) {\n                                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                        }\n                    },\n                    FragmentSpread: function (spread, _, __, ___, ancestors) {\n                        var fragment = fragmentMap[spread.name.value];\n                        invariant(fragment, 17, spread.name.value);\n                        var fragmentSelections = collectByDefinition(fragment);\n                        if (fragmentSelections.size > 0) {\n                            ancestors.forEach(function (node) {\n                                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                            matches_1.add(spread);\n                            fragmentSelections.forEach(function (selection) {\n                                matches_1.add(selection);\n                            });\n                        }\n                    }\n                });\n            }\n            return selectionsToResolveCache.get(definitionNode);\n        }\n        return collectByDefinition(mainDefinition);\n    };\n    return LocalState;\n}());\nexport { LocalState };\n//# sourceMappingURL=LocalState.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA,IAAI,aAAc;IACd,SAAS,WAAW,EAAE;QAClB,IAAI,QAAQ,GAAG,KAAK,EAAE,SAAS,GAAG,MAAM,EAAE,YAAY,GAAG,SAAS,EAAE,kBAAkB,GAAG,eAAe;QACxG,IAAI,CAAC,wBAAwB,GAAG,IAAI;QACpC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,QAAQ;YACR,IAAI,CAAC,MAAM,GAAG;QAClB;QACA,IAAI,WAAW;YACX,IAAI,CAAC,YAAY,CAAC;QACtB;QACA,IAAI,iBAAiB;YACjB,IAAI,CAAC,kBAAkB,CAAC;QAC5B;IACJ;IACA,WAAW,SAAS,CAAC,YAAY,GAAG,SAAU,SAAS;QACnD,IAAI,QAAQ,IAAI;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC;QACpC,IAAI,MAAM,OAAO,CAAC,YAAY;YAC1B,UAAU,OAAO,CAAC,SAAU,aAAa;gBACrC,MAAM,SAAS,GAAG,kJAAU,MAAM,SAAS,EAAE;YACjD;QACJ,OACK;YACD,IAAI,CAAC,SAAS,GAAG,kJAAU,IAAI,CAAC,SAAS,EAAE;QAC/C;IACJ;IACA,WAAW,SAAS,CAAC,YAAY,GAAG,SAAU,SAAS;QACnD,IAAI,CAAC,SAAS,GAAG,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC;IACtB;IACA,WAAW,SAAS,CAAC,YAAY,GAAG;QAChC,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC;IAC9B;IACA,WAAW,SAAS,CAAC,YAAY,GAAG,SAAU,EAAE;QAC5C,IAAI,WAAW,GAAG,QAAQ,EAAE,eAAe,GAAG,YAAY,EAAE,UAAU,GAAG,OAAO,EAAE,YAAY,GAAG,SAAS,EAAE,KAAK,GAAG,sBAAsB,EAAE,yBAAyB,OAAO,KAAK,IAAI,QAAQ;QAC7L,OAAO,gIAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,OAAO,kIAAY,IAAI,EAAE,SAAU,EAAE;gBACjC,IAAI,UAAU;oBACV,OAAO;wBAAC;wBAAG,IAAI,CAAC,eAAe,CAAC,UAAU,aAAa,IAAI,EAAE,SAAS,WAAW,IAAI,CAAC,eAAe,EAAE,wBAAwB,IAAI,CAAC,SAAU,WAAW;4BAAI,OAAQ,+HAAS,+HAAS,CAAC,GAAG,eAAe;gCAAE,MAAM,YAAY,MAAM;4BAAC;wBAAK;qBAAG;gBACjP;gBACA,OAAO;oBAAC;oBAAG;iBAAa;YAC5B;QACJ;IACJ;IACA,WAAW,SAAS,CAAC,kBAAkB,GAAG,SAAU,eAAe;QAC/D,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,WAAW,SAAS,CAAC,kBAAkB,GAAG;QACtC,OAAO,IAAI,CAAC,eAAe;IAC/B;IACA,WAAW,SAAS,CAAC,WAAW,GAAG,SAAU,QAAQ;QACjD,IAAI,sJAAc;YAAC;SAAS,EAAE,WAAW;YACrC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,OAAO;YACX;QACJ;QACA,OAAO;IACX;IACA,WAAW,SAAS,CAAC,WAAW,GAAG,SAAU,QAAQ;QACjD,OAAO,qKAA6B;IACxC;IACA,WAAW,SAAS,CAAC,cAAc,GAAG,SAAU,OAAO;QACnD,IAAI,QAAQ,IAAI,CAAC,KAAK;QACtB,OAAO,+HAAS,+HAAS,CAAC,GAAG,UAAU;YAAE,OAAO;YAAO,aAAa,SAAU,GAAG;gBACzE,OAAO,MAAM,QAAQ,CAAC;YAC1B;QAAE;IACV;IACA,WAAW,SAAS,CAAC,oBAAoB,GAAG,SAAU,QAAQ,EAAE,SAAS,EAAE,OAAO;QAC9E,IAAI,cAAc,KAAK,GAAG;YAAE,YAAY,CAAC;QAAG;QAC5C,IAAI,YAAY,KAAK,GAAG;YAAE,UAAU,CAAC;QAAG;QACxC,OAAO,gIAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,OAAO,kIAAY,IAAI,EAAE,SAAU,EAAE;gBACjC,IAAI,UAAU;oBACV,OAAO;wBAAC;wBAAG,IAAI,CAAC,eAAe,CAAC,UAAU,IAAI,CAAC,uBAAuB,CAAC,UAAU,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,WAAW,IAAI,CAAC,SAAU,IAAI;4BAAI,OAAQ,+HAAS,+HAAS,CAAC,GAAG,YAAY,KAAK,iBAAiB;wBAAI;qBAAG;gBAC9O;gBACA,OAAO;oBAAC;oBAAG,+HAAS,CAAC,GAAG;iBAAW;YACvC;QACJ;IACJ;IACA,WAAW,SAAS,CAAC,oBAAoB,GAAG,SAAU,QAAQ;QAC1D,IAAI,iBAAiB;QACrB,uHAAM,UAAU;YACZ,WAAW;gBACP,OAAO,SAAU,IAAI;oBACjB,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,YAAY,KAAK,SAAS,EAAE;wBAChD,iBAAiB,KAAK,SAAS,CAAC,IAAI,CAAC,SAAU,GAAG;4BAC9C,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,YACtB,IAAI,KAAK,CAAC,IAAI,KAAK,kBACnB,IAAI,KAAK,CAAC,KAAK,KAAK;wBAC5B;wBACA,IAAI,gBAAgB;4BAChB;wBACJ;oBACJ;gBACJ;YACJ;QACJ;QACA,OAAO;IACX;IACA,WAAW,SAAS,CAAC,uBAAuB,GAAG,SAAU,QAAQ,EAAE,SAAS;QACxE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACnB,OAAO,mKAA2B;YAClC,WAAW;YACX,mBAAmB;YACnB,YAAY;QAChB,GAAG,MAAM;IACb;IACA,WAAW,SAAS,CAAC,eAAe,GAAG,SAAU,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,sBAAsB;QAC7H,IAAI,YAAY,KAAK,GAAG;YAAE,UAAU,CAAC;QAAG;QACxC,IAAI,cAAc,KAAK,GAAG;YAAE,YAAY,CAAC;QAAG;QAC5C,IAAI,oBAAoB,KAAK,GAAG;YAAE,kBAAkB;gBAAc,OAAO;YAAM;QAAG;QAClF,IAAI,2BAA2B,KAAK,GAAG;YAAE,yBAAyB;QAAO;QACzE,OAAO,gIAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI,gBAAgB,WAAW,aAAa,qBAAqB,qBAAqB,sBAAsB,IAAI,OAAO,QAAQ,aAAa;YAC5I,OAAO,kIAAY,IAAI,EAAE,SAAU,EAAE;gBACjC,iBAAiB,0JAAkB;gBACnC,YAAY,+JAAuB;gBACnC,cAAc,0JAAkB;gBAChC,sBAAsB,IAAI,CAAC,0BAA0B,CAAC,gBAAgB;gBACtE,sBAAsB,eAAe,SAAS;gBAC9C,uBAAuB,sBACjB,oBAAoB,MAAM,CAAC,GAAG,WAAW,KACvC,oBAAoB,KAAK,CAAC,KAC5B;gBACN,KAAK,IAAI,EAAE,QAAQ,GAAG,KAAK,EAAE,SAAS,GAAG,MAAM;gBAC/C,cAAc;oBACV,aAAa;oBACb,SAAS,+HAAS,+HAAS,CAAC,GAAG,UAAU;wBAAE,OAAO;wBAAO,QAAQ;oBAAO;oBACxE,WAAW;oBACX,iBAAiB;oBACjB,sBAAsB;oBACtB,mBAAmB,CAAC;oBACpB,qBAAqB;oBACrB,wBAAwB;gBAC5B;gBACA,0BAA0B;gBAC1B,OAAO;oBAAC;oBAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,YAAY,EAAE,yBAAyB,WAAW,aAAa,IAAI,CAAC,SAAU,MAAM;wBAAI,OAAQ;4BAC3I,QAAQ;4BACR,mBAAmB,YAAY,iBAAiB;wBACpD;oBAAI;iBAAG;YACf;QACJ;IACJ;IACA,WAAW,SAAS,CAAC,mBAAmB,GAAG,SAAU,YAAY,EAAE,uBAAuB,EAAE,SAAS,EAAE,WAAW;QAC9G,OAAO,gIAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI,aAAa,SAAS,WAAW,gBAAgB;YACrD,IAAI,QAAQ,IAAI;YAChB,OAAO,kIAAY,IAAI,EAAE,SAAU,EAAE;gBACjC,cAAc,YAAY,WAAW,EAAE,UAAU,YAAY,OAAO,EAAE,YAAY,YAAY,SAAS;gBACvG,iBAAiB;oBAAC;iBAAU;gBAC5B,UAAU,SAAU,SAAS;oBAAI,OAAO,gIAAU,OAAO,KAAK,GAAG,KAAK,GAAG;wBACrE,IAAI,UAAU;wBACd,OAAO,kIAAY,IAAI,EAAE,SAAU,EAAE;4BACjC,IAAI,CAAC,2BAA2B,CAAC,YAAY,mBAAmB,CAAC,GAAG,CAAC,YAAY;gCAC7E,OAAO;oCAAC;iCAAE;4BACd;4BACA,IAAI,CAAC,sJAAc,WAAW,YAAY;gCACtC,OAAO;oCAAC;iCAAE;4BACd;4BACA,IAAI,gJAAQ,YAAY;gCACpB,OAAO;oCAAC;oCAAG,IAAI,CAAC,YAAY,CAAC,WAAW,yBAAyB,WAAW,aAAa,IAAI,CAAC,SAAU,WAAW;wCAC3G,IAAI;wCACJ,IAAI,OAAO,gBAAgB,aAAa;4CACpC,eAAe,IAAI,CAAE,CAAA,KAAK,CAAC,GACvB,EAAE,CAAC,+JAAuB,WAAW,GAAG,aACxC,EAAC;wCACT;oCACJ;iCAAG;4BACX;4BACA,IAAI,yJAAiB,YAAY;gCAC7B,WAAW;4BACf,OACK;gCACD,WAAW,WAAW,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC;gCAC5C,6JAAU,UAAU,IAAI,UAAU,IAAI,CAAC,KAAK;4BAChD;4BACA,IAAI,YAAY,SAAS,aAAa,EAAE;gCACpC,gBAAgB,SAAS,aAAa,CAAC,IAAI,CAAC,KAAK;gCACjD,IAAI,YAAY,eAAe,CAAC,WAAW,eAAe,UAAU;oCAChE,OAAO;wCAAC;wCAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,YAAY,EAAE,yBAAyB,WAAW,aAAa,IAAI,CAAC,SAAU,cAAc;4CACjI,eAAe,IAAI,CAAC;wCACxB;qCAAG;gCACX;4BACJ;4BACA,OAAO;gCAAC;6BAAE;wBACd;oBACJ;gBAAI;gBACJ,OAAO;oBAAC;oBAAG,QAAQ,GAAG,CAAC,aAAa,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC;wBAC1D,OAAO,uJAAe;oBAC1B;iBAAG;YACX;QACJ;IACJ;IACA,WAAW,SAAS,CAAC,YAAY,GAAG,SAAU,KAAK,EAAE,uBAAuB,EAAE,SAAS,EAAE,WAAW;QAChG,OAAO,gIAAU,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI,WAAW,WAAW,kBAAkB,WAAW,eAAe,eAAe,cAAc,aAAa;YAChH,IAAI,QAAQ,IAAI;YAChB,OAAO,kIAAY,IAAI,EAAE,SAAU,EAAE;gBACjC,IAAI,CAAC,WAAW;oBACZ,OAAO;wBAAC;wBAAG;qBAAK;gBACpB;gBACA,YAAY,YAAY,SAAS;gBACjC,YAAY,MAAM,IAAI,CAAC,KAAK;gBAC5B,mBAAmB,+JAAuB;gBAC1C,YAAY,cAAc;gBAC1B,gBAAgB,SAAS,CAAC,iBAAiB,IAAI,SAAS,CAAC,UAAU;gBACnE,gBAAgB,QAAQ,OAAO,CAAC;gBAChC,IAAI,CAAC,YAAY,sBAAsB,IACnC,IAAI,CAAC,oBAAoB,CAAC,QAAQ;oBAClC,eAAe,UAAU,UAAU,IAAI,YAAY,oBAAoB;oBACvE,cAAc,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa;oBAC5D,IAAI,aAAa;wBACb,UAAU,WAAW,CAAC,YAAY,YAAY,iBAAiB;wBAC/D,IAAI,SAAS;4BACT,gBAAgB,QAAQ,OAAO,CAAC,8IAAU,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS;gCACrE;gCACA,iKAAyB,OAAO;gCAChC,YAAY,OAAO;gCACnB;oCAAE,OAAO;oCAAO,aAAa,YAAY,WAAW;gCAAC;6BACxD;wBACL;oBACJ;gBACJ;gBACA,OAAO;oBAAC;oBAAG,cAAc,IAAI,CAAC,SAAU,MAAM;wBACtC,IAAI,IAAI;wBACR,IAAI,WAAW,KAAK,GAAG;4BAAE,SAAS;wBAAe;wBACjD,IAAI,MAAM,UAAU,EAAE;4BAClB,MAAM,UAAU,CAAC,OAAO,CAAC,SAAU,SAAS;gCACxC,IAAI,UAAU,IAAI,CAAC,KAAK,KAAK,YAAY,UAAU,SAAS,EAAE;oCAC1D,UAAU,SAAS,CAAC,OAAO,CAAC,SAAU,GAAG;wCACrC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe;4CAC7D,YAAY,iBAAiB,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG;wCACrD;oCACJ;gCACJ;4BACJ;wBACJ;wBACA,IAAI,CAAC,MAAM,YAAY,EAAE;4BACrB,OAAO;wBACX;wBACA,IAAI,UAAU,MAAM;4BAChB,OAAO;wBACX;wBACA,IAAI,gBAAgB,CAAC,KAAK,CAAC,KAAK,MAAM,UAAU,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,SAAU,CAAC;4BAAI,OAAO,EAAE,IAAI,CAAC,KAAK,KAAK;wBAAU,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;wBACrL,IAAI,MAAM,OAAO,CAAC,SAAS;4BACvB,OAAO,MAAM,uBAAuB,CAAC,OAAO,2BAA2B,eAAe,QAAQ;wBAClG;wBACA,IAAI,MAAM,YAAY,EAAE;4BACpB,OAAO,MAAM,mBAAmB,CAAC,MAAM,YAAY,EAAE,2BAA2B,eAAe,QAAQ;wBAC3G;oBACJ;iBAAG;YACX;QACJ;IACJ;IACA,WAAW,SAAS,CAAC,uBAAuB,GAAG,SAAU,KAAK,EAAE,uBAAuB,EAAE,MAAM,EAAE,WAAW;QACxG,IAAI,QAAQ,IAAI;QAChB,OAAO,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAC,SAAU,IAAI;YACxC,IAAI,SAAS,MAAM;gBACf,OAAO;YACX;YACA,IAAI,MAAM,OAAO,CAAC,OAAO;gBACrB,OAAO,MAAM,uBAAuB,CAAC,OAAO,yBAAyB,MAAM;YAC/E;YACA,IAAI,MAAM,YAAY,EAAE;gBACpB,OAAO,MAAM,mBAAmB,CAAC,MAAM,YAAY,EAAE,yBAAyB,MAAM;YACxF;QACJ;IACJ;IACA,WAAW,SAAS,CAAC,0BAA0B,GAAG,SAAU,cAAc,EAAE,WAAW;QACnF,IAAI,kBAAkB,SAAU,IAAI;YAAI,OAAO,CAAC,MAAM,OAAO,CAAC;QAAO;QACrE,IAAI,2BAA2B,IAAI,CAAC,wBAAwB;QAC5D,SAAS,oBAAoB,cAAc;YACvC,IAAI,CAAC,yBAAyB,GAAG,CAAC,iBAAiB;gBAC/C,IAAI,YAAY,IAAI;gBACpB,yBAAyB,GAAG,CAAC,gBAAgB;gBAC7C,uHAAM,gBAAgB;oBAClB,WAAW,SAAU,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,SAAS;wBAC5C,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,UAAU;4BAC9B,UAAU,OAAO,CAAC,SAAU,IAAI;gCAC5B,IAAI,gBAAgB,SAAS,iIAAgB,OAAO;oCAChD,UAAU,GAAG,CAAC;gCAClB;4BACJ;wBACJ;oBACJ;oBACA,gBAAgB,SAAU,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,SAAS;wBACnD,IAAI,WAAW,WAAW,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC;wBAC7C,6JAAU,UAAU,IAAI,OAAO,IAAI,CAAC,KAAK;wBACzC,IAAI,qBAAqB,oBAAoB;wBAC7C,IAAI,mBAAmB,IAAI,GAAG,GAAG;4BAC7B,UAAU,OAAO,CAAC,SAAU,IAAI;gCAC5B,IAAI,gBAAgB,SAAS,iIAAgB,OAAO;oCAChD,UAAU,GAAG,CAAC;gCAClB;4BACJ;4BACA,UAAU,GAAG,CAAC;4BACd,mBAAmB,OAAO,CAAC,SAAU,SAAS;gCAC1C,UAAU,GAAG,CAAC;4BAClB;wBACJ;oBACJ;gBACJ;YACJ;YACA,OAAO,yBAAyB,GAAG,CAAC;QACxC;QACA,OAAO,oBAAoB;IAC/B;IACA,OAAO;AACX;;CAEA,sCAAsC"}},
    {"offset": {"line": 1046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/QueryInfo.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { equal } from \"@wry/equality\";\nimport { DeepMerger } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from '../utilities/index.js';\nimport { reobserveCacheFirst } from './ObservableQuery.js';\nimport { isNonEmptyArray, graphQLResultHasError, canUseWeakMap, } from '../utilities/index.js';\nimport { NetworkStatus, isNetworkRequestInFlight, } from './networkStatus.js';\n;\nvar destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();\nfunction wrapDestructiveCacheMethod(cache, methodName) {\n    var original = cache[methodName];\n    if (typeof original === \"function\") {\n        cache[methodName] = function () {\n            destructiveMethodCounts.set(cache, (destructiveMethodCounts.get(cache) + 1) % 1e15);\n            return original.apply(this, arguments);\n        };\n    }\n}\nfunction cancelNotifyTimeout(info) {\n    if (info[\"notifyTimeout\"]) {\n        clearTimeout(info[\"notifyTimeout\"]);\n        info[\"notifyTimeout\"] = void 0;\n    }\n}\nvar QueryInfo = (function () {\n    function QueryInfo(queryManager, queryId) {\n        if (queryId === void 0) { queryId = queryManager.generateQueryId(); }\n        this.queryId = queryId;\n        this.listeners = new Set();\n        this.document = null;\n        this.lastRequestId = 1;\n        this.subscriptions = new Set();\n        this.stopped = false;\n        this.dirty = false;\n        this.observableQuery = null;\n        var cache = this.cache = queryManager.cache;\n        if (!destructiveMethodCounts.has(cache)) {\n            destructiveMethodCounts.set(cache, 0);\n            wrapDestructiveCacheMethod(cache, \"evict\");\n            wrapDestructiveCacheMethod(cache, \"modify\");\n            wrapDestructiveCacheMethod(cache, \"reset\");\n        }\n    }\n    QueryInfo.prototype.init = function (query) {\n        var networkStatus = query.networkStatus || NetworkStatus.loading;\n        if (this.variables &&\n            this.networkStatus !== NetworkStatus.loading &&\n            !equal(this.variables, query.variables)) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        if (!equal(query.variables, this.variables)) {\n            this.lastDiff = void 0;\n        }\n        Object.assign(this, {\n            document: query.document,\n            variables: query.variables,\n            networkError: null,\n            graphQLErrors: this.graphQLErrors || [],\n            networkStatus: networkStatus,\n        });\n        if (query.observableQuery) {\n            this.setObservableQuery(query.observableQuery);\n        }\n        if (query.lastRequestId) {\n            this.lastRequestId = query.lastRequestId;\n        }\n        return this;\n    };\n    QueryInfo.prototype.reset = function () {\n        cancelNotifyTimeout(this);\n        this.dirty = false;\n    };\n    QueryInfo.prototype.getDiff = function (variables) {\n        if (variables === void 0) { variables = this.variables; }\n        var options = this.getDiffOptions(variables);\n        if (this.lastDiff && equal(options, this.lastDiff.options)) {\n            return this.lastDiff.diff;\n        }\n        this.updateWatch(this.variables = variables);\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return { complete: false };\n        }\n        var diff = this.cache.diff(options);\n        this.updateLastDiff(diff, options);\n        return diff;\n    };\n    QueryInfo.prototype.updateLastDiff = function (diff, options) {\n        this.lastDiff = diff ? {\n            diff: diff,\n            options: options || this.getDiffOptions(),\n        } : void 0;\n    };\n    QueryInfo.prototype.getDiffOptions = function (variables) {\n        var _a;\n        if (variables === void 0) { variables = this.variables; }\n        return {\n            query: this.document,\n            variables: variables,\n            returnPartialData: true,\n            optimistic: true,\n            canonizeResults: (_a = this.observableQuery) === null || _a === void 0 ? void 0 : _a.options.canonizeResults,\n        };\n    };\n    QueryInfo.prototype.setDiff = function (diff) {\n        var _this = this;\n        var oldDiff = this.lastDiff && this.lastDiff.diff;\n        this.updateLastDiff(diff);\n        if (!this.dirty &&\n            !equal(oldDiff && oldDiff.result, diff && diff.result)) {\n            this.dirty = true;\n            if (!this.notifyTimeout) {\n                this.notifyTimeout = setTimeout(function () { return _this.notify(); }, 0);\n            }\n        }\n    };\n    QueryInfo.prototype.setObservableQuery = function (oq) {\n        var _this = this;\n        if (oq === this.observableQuery)\n            return;\n        if (this.oqListener) {\n            this.listeners.delete(this.oqListener);\n        }\n        this.observableQuery = oq;\n        if (oq) {\n            oq[\"queryInfo\"] = this;\n            this.listeners.add(this.oqListener = function () {\n                var diff = _this.getDiff();\n                if (diff.fromOptimisticTransaction) {\n                    oq[\"observe\"]();\n                }\n                else {\n                    reobserveCacheFirst(oq);\n                }\n            });\n        }\n        else {\n            delete this.oqListener;\n        }\n    };\n    QueryInfo.prototype.notify = function () {\n        var _this = this;\n        cancelNotifyTimeout(this);\n        if (this.shouldNotify()) {\n            this.listeners.forEach(function (listener) { return listener(_this); });\n        }\n        this.dirty = false;\n    };\n    QueryInfo.prototype.shouldNotify = function () {\n        if (!this.dirty || !this.listeners.size) {\n            return false;\n        }\n        if (isNetworkRequestInFlight(this.networkStatus) &&\n            this.observableQuery) {\n            var fetchPolicy = this.observableQuery.options.fetchPolicy;\n            if (fetchPolicy !== \"cache-only\" &&\n                fetchPolicy !== \"cache-and-network\") {\n                return false;\n            }\n        }\n        return true;\n    };\n    QueryInfo.prototype.stop = function () {\n        if (!this.stopped) {\n            this.stopped = true;\n            this.reset();\n            this.cancel();\n            this.cancel = QueryInfo.prototype.cancel;\n            this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n            var oq = this.observableQuery;\n            if (oq)\n                oq.stopPolling();\n        }\n    };\n    QueryInfo.prototype.cancel = function () { };\n    QueryInfo.prototype.updateWatch = function (variables) {\n        var _this = this;\n        if (variables === void 0) { variables = this.variables; }\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return;\n        }\n        var watchOptions = __assign(__assign({}, this.getDiffOptions(variables)), { watcher: this, callback: function (diff) { return _this.setDiff(diff); } });\n        if (!this.lastWatch ||\n            !equal(watchOptions, this.lastWatch)) {\n            this.cancel();\n            this.cancel = this.cache.watch(this.lastWatch = watchOptions);\n        }\n    };\n    QueryInfo.prototype.resetLastWrite = function () {\n        this.lastWrite = void 0;\n    };\n    QueryInfo.prototype.shouldWrite = function (result, variables) {\n        var lastWrite = this.lastWrite;\n        return !(lastWrite &&\n            lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n            equal(variables, lastWrite.variables) &&\n            equal(result.data, lastWrite.result.data));\n    };\n    QueryInfo.prototype.markResult = function (result, document, options, cacheWriteBehavior) {\n        var _this = this;\n        var merger = new DeepMerger();\n        var graphQLErrors = isNonEmptyArray(result.errors)\n            ? result.errors.slice(0)\n            : [];\n        this.reset();\n        if ('incremental' in result && isNonEmptyArray(result.incremental)) {\n            var mergedData = mergeIncrementalData(this.getDiff().result, result);\n            result.data = mergedData;\n        }\n        else if ('hasNext' in result && result.hasNext) {\n            var diff = this.getDiff();\n            result.data = merger.merge(diff.result, result.data);\n        }\n        this.graphQLErrors = graphQLErrors;\n        if (options.fetchPolicy === 'no-cache') {\n            this.updateLastDiff({ result: result.data, complete: true }, this.getDiffOptions(options.variables));\n        }\n        else if (cacheWriteBehavior !== 0) {\n            if (shouldWriteResult(result, options.errorPolicy)) {\n                this.cache.performTransaction(function (cache) {\n                    if (_this.shouldWrite(result, options.variables)) {\n                        cache.writeQuery({\n                            query: document,\n                            data: result.data,\n                            variables: options.variables,\n                            overwrite: cacheWriteBehavior === 1,\n                        });\n                        _this.lastWrite = {\n                            result: result,\n                            variables: options.variables,\n                            dmCount: destructiveMethodCounts.get(_this.cache),\n                        };\n                    }\n                    else {\n                        if (_this.lastDiff &&\n                            _this.lastDiff.diff.complete) {\n                            result.data = _this.lastDiff.diff.result;\n                            return;\n                        }\n                    }\n                    var diffOptions = _this.getDiffOptions(options.variables);\n                    var diff = cache.diff(diffOptions);\n                    if (!_this.stopped) {\n                        _this.updateWatch(options.variables);\n                    }\n                    _this.updateLastDiff(diff, diffOptions);\n                    if (diff.complete) {\n                        result.data = diff.result;\n                    }\n                });\n            }\n            else {\n                this.lastWrite = void 0;\n            }\n        }\n    };\n    QueryInfo.prototype.markReady = function () {\n        this.networkError = null;\n        return this.networkStatus = NetworkStatus.ready;\n    };\n    QueryInfo.prototype.markError = function (error) {\n        this.networkStatus = NetworkStatus.error;\n        this.lastWrite = void 0;\n        this.reset();\n        if (error.graphQLErrors) {\n            this.graphQLErrors = error.graphQLErrors;\n        }\n        if (error.networkError) {\n            this.networkError = error.networkError;\n        }\n        return error;\n    };\n    return QueryInfo;\n}());\nexport { QueryInfo };\nexport function shouldWriteResult(result, errorPolicy) {\n    if (errorPolicy === void 0) { errorPolicy = \"none\"; }\n    var ignoreErrors = errorPolicy === \"ignore\" ||\n        errorPolicy === \"all\";\n    var writeWithErrors = !graphQLResultHasError(result);\n    if (!writeWithErrors && ignoreErrors && result.data) {\n        writeWithErrors = true;\n    }\n    return writeWithErrors;\n}\n//# sourceMappingURL=QueryInfo.js.map"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1351, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1355, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/QueryManager.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant, newInvariantError } from '../utilities/globals/index.js';\nimport { equal } from '@wry/equality';\nimport { execute } from '../link/core/index.js';\nimport { hasDirectives, isExecutionPatchIncrementalResult, isExecutionPatchResult, removeDirectivesFromDocument, } from '../utilities/index.js';\nimport { canonicalStringify } from '../cache/index.js';\nimport { getDefaultValues, getOperationDefinition, getOperationName, hasClientExports, graphQLResultHasError, getGraphQLErrorsFromResult, canUseWeakMap, Observable, asyncMap, isNonEmptyArray, Concast, makeUniqueId, isDocumentNode, isNonNullObject, DocumentTransform, } from '../utilities/index.js';\nimport { mergeIncrementalData } from '../utilities/common/incrementalResult.js';\nimport { ApolloError, isApolloError, graphQLResultHasProtocolErrors } from '../errors/index.js';\nimport { ObservableQuery, logMissingFieldErrors } from './ObservableQuery.js';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus.js';\nimport { LocalState } from './LocalState.js';\nimport { QueryInfo, shouldWriteResult, } from './QueryInfo.js';\nimport { PROTOCOL_ERRORS_SYMBOL } from '../errors/index.js';\nimport { print } from '../utilities/index.js';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var cache = _a.cache, link = _a.link, defaultOptions = _a.defaultOptions, documentTransform = _a.documentTransform, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, onBroadcast = _a.onBroadcast, _c = _a.ssrMode, ssrMode = _c === void 0 ? false : _c, _d = _a.clientAwareness, clientAwareness = _d === void 0 ? {} : _d, localState = _a.localState, _e = _a.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? !!cache.assumeImmutableResults : _e;\n        var _this = this;\n        this.clientAwareness = {};\n        this.queries = new Map();\n        this.fetchCancelFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.queryIdCounter = 1;\n        this.requestIdCounter = 1;\n        this.mutationIdCounter = 1;\n        this.inFlightLinkObservables = new Map();\n        var defaultDocumentTransform = new DocumentTransform(function (document) { return _this.cache.transformDocument(document); }, { cache: false });\n        this.cache = cache;\n        this.link = link;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.queryDeduplication = queryDeduplication;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: cache });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = assumeImmutableResults;\n        this.documentTransform = documentTransform\n            ? defaultDocumentTransform\n                .concat(documentTransform)\n                .concat(defaultDocumentTransform)\n            : defaultDocumentTransform;\n        if ((this.onBroadcast = onBroadcast)) {\n            this.mutationStore = Object.create(null);\n        }\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.cancelPendingFetches(newInvariantError(23));\n    };\n    QueryManager.prototype.cancelPendingFetches = function (error) {\n        this.fetchCancelFns.forEach(function (cancel) { return cancel(error); });\n        this.fetchCancelFns.clear();\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var _b, _c;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueries = _a.updateQueries, _d = _a.refetchQueries, refetchQueries = _d === void 0 ? [] : _d, _e = _a.awaitRefetchQueries, awaitRefetchQueries = _e === void 0 ? false : _e, updateWithProxyFn = _a.update, onQueryUpdated = _a.onQueryUpdated, _f = _a.fetchPolicy, fetchPolicy = _f === void 0 ? ((_b = this.defaultOptions.mutate) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || \"network-only\" : _f, _g = _a.errorPolicy, errorPolicy = _g === void 0 ? ((_c = this.defaultOptions.mutate) === null || _c === void 0 ? void 0 : _c.errorPolicy) || \"none\" : _g, keepRootFields = _a.keepRootFields, context = _a.context;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, hasClientExports, mutationStoreValue, self;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        invariant(mutation, 24);\n                        invariant(fetchPolicy === 'network-only' ||\n                            fetchPolicy === 'no-cache', 25);\n                        mutationId = this.generateMutationId();\n                        mutation = this.cache.transformForLink(this.transform(mutation));\n                        hasClientExports = this.getDocumentInfo(mutation).hasClientExports;\n                        variables = this.getVariables(mutation, variables);\n                        if (!hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = (_h.sent());\n                        _h.label = 2;\n                    case 2:\n                        mutationStoreValue = this.mutationStore &&\n                            (this.mutationStore[mutationId] = {\n                                mutation: mutation,\n                                variables: variables,\n                                loading: true,\n                                error: null,\n                            });\n                        if (optimisticResponse) {\n                            this.markMutationOptimistic(optimisticResponse, {\n                                mutationId: mutationId,\n                                document: mutation,\n                                variables: variables,\n                                fetchPolicy: fetchPolicy,\n                                errorPolicy: errorPolicy,\n                                context: context,\n                                updateQueries: updateQueries,\n                                update: updateWithProxyFn,\n                                keepRootFields: keepRootFields,\n                            });\n                        }\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                return asyncMap(self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false), function (result) {\n                                    if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                        throw new ApolloError({\n                                            graphQLErrors: getGraphQLErrorsFromResult(result),\n                                        });\n                                    }\n                                    if (mutationStoreValue) {\n                                        mutationStoreValue.loading = false;\n                                        mutationStoreValue.error = null;\n                                    }\n                                    var storeResult = __assign({}, result);\n                                    if (typeof refetchQueries === \"function\") {\n                                        refetchQueries = refetchQueries(storeResult);\n                                    }\n                                    if (errorPolicy === 'ignore' &&\n                                        graphQLResultHasError(storeResult)) {\n                                        delete storeResult.errors;\n                                    }\n                                    return self.markMutationResult({\n                                        mutationId: mutationId,\n                                        result: storeResult,\n                                        document: mutation,\n                                        variables: variables,\n                                        fetchPolicy: fetchPolicy,\n                                        errorPolicy: errorPolicy,\n                                        context: context,\n                                        update: updateWithProxyFn,\n                                        updateQueries: updateQueries,\n                                        awaitRefetchQueries: awaitRefetchQueries,\n                                        refetchQueries: refetchQueries,\n                                        removeOptimistic: optimisticResponse ? mutationId : void 0,\n                                        onQueryUpdated: onQueryUpdated,\n                                        keepRootFields: keepRootFields,\n                                    });\n                                }).subscribe({\n                                    next: function (storeResult) {\n                                        self.broadcastQueries();\n                                        if (!('hasNext' in storeResult) || storeResult.hasNext === false) {\n                                            resolve(storeResult);\n                                        }\n                                    },\n                                    error: function (err) {\n                                        if (mutationStoreValue) {\n                                            mutationStoreValue.loading = false;\n                                            mutationStoreValue.error = err;\n                                        }\n                                        if (optimisticResponse) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        reject(err instanceof ApolloError ? err : new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markMutationResult = function (mutation, cache) {\n        var _this = this;\n        if (cache === void 0) { cache = this.cache; }\n        var result = mutation.result;\n        var cacheWrites = [];\n        var skipCache = mutation.fetchPolicy === \"no-cache\";\n        if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n            if (!isExecutionPatchIncrementalResult(result)) {\n                cacheWrites.push({\n                    result: result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                });\n            }\n            if (isExecutionPatchIncrementalResult(result) && isNonEmptyArray(result.incremental)) {\n                var diff = cache.diff({\n                    id: \"ROOT_MUTATION\",\n                    query: this.getDocumentInfo(mutation.document).asQuery,\n                    variables: mutation.variables,\n                    optimistic: false,\n                    returnPartialData: true,\n                });\n                var mergedData = void 0;\n                if (diff.result) {\n                    mergedData = mergeIncrementalData(diff.result, result);\n                }\n                if (typeof mergedData !== 'undefined') {\n                    result.data = mergedData;\n                    cacheWrites.push({\n                        result: mergedData,\n                        dataId: 'ROOT_MUTATION',\n                        query: mutation.document,\n                        variables: mutation.variables,\n                    });\n                }\n            }\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                this.queries.forEach(function (_a, queryId) {\n                    var observableQuery = _a.observableQuery;\n                    var queryName = observableQuery && observableQuery.queryName;\n                    if (!queryName || !hasOwnProperty.call(updateQueries_1, queryName)) {\n                        return;\n                    }\n                    var updater = updateQueries_1[queryName];\n                    var _b = _this.queries.get(queryId), document = _b.document, variables = _b.variables;\n                    var _c = cache.diff({\n                        query: document,\n                        variables: variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _c.result, complete = _c.complete;\n                    if (complete && currentQueryResult) {\n                        var nextQueryResult = updater(currentQueryResult, {\n                            mutationResult: result,\n                            queryName: document && getOperationName(document) || void 0,\n                            queryVariables: variables,\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: document,\n                                variables: variables,\n                            });\n                        }\n                    }\n                });\n            }\n        }\n        if (cacheWrites.length > 0 ||\n            mutation.refetchQueries ||\n            mutation.update ||\n            mutation.onQueryUpdated ||\n            mutation.removeOptimistic) {\n            var results_1 = [];\n            this.refetchQueries({\n                updateCache: function (cache) {\n                    if (!skipCache) {\n                        cacheWrites.forEach(function (write) { return cache.write(write); });\n                    }\n                    var update = mutation.update;\n                    var isFinalResult = !isExecutionPatchResult(result) ||\n                        (isExecutionPatchIncrementalResult(result) && !result.hasNext);\n                    if (update) {\n                        if (!skipCache) {\n                            var diff = cache.diff({\n                                id: \"ROOT_MUTATION\",\n                                query: _this.getDocumentInfo(mutation.document).asQuery,\n                                variables: mutation.variables,\n                                optimistic: false,\n                                returnPartialData: true,\n                            });\n                            if (diff.complete) {\n                                result = __assign(__assign({}, result), { data: diff.result });\n                                if ('incremental' in result) {\n                                    delete result.incremental;\n                                }\n                                if ('hasNext' in result) {\n                                    delete result.hasNext;\n                                }\n                            }\n                        }\n                        if (isFinalResult) {\n                            update(cache, result, {\n                                context: mutation.context,\n                                variables: mutation.variables,\n                            });\n                        }\n                    }\n                    if (!skipCache && !mutation.keepRootFields && isFinalResult) {\n                        cache.modify({\n                            id: 'ROOT_MUTATION',\n                            fields: function (value, _a) {\n                                var fieldName = _a.fieldName, DELETE = _a.DELETE;\n                                return fieldName === \"__typename\" ? value : DELETE;\n                            },\n                        });\n                    }\n                },\n                include: mutation.refetchQueries,\n                optimistic: false,\n                removeOptimistic: mutation.removeOptimistic,\n                onQueryUpdated: mutation.onQueryUpdated || null,\n            }).forEach(function (result) { return results_1.push(result); });\n            if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n                return Promise.all(results_1).then(function () { return result; });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    QueryManager.prototype.markMutationOptimistic = function (optimisticResponse, mutation) {\n        var _this = this;\n        var data = typeof optimisticResponse === \"function\"\n            ? optimisticResponse(mutation.variables)\n            : optimisticResponse;\n        return this.cache.recordOptimisticTransaction(function (cache) {\n            try {\n                _this.markMutationResult(__assign(__assign({}, mutation), { result: { data: data } }), cache);\n            }\n            catch (error) {\n                globalThis.__DEV__ !== false && invariant.error(error);\n            }\n        }, mutation.mutationId);\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, networkStatus) {\n        return this.fetchConcastWithInfo(queryId, options, networkStatus).concast.promise;\n    };\n    QueryManager.prototype.getQueryStore = function () {\n        var store = Object.create(null);\n        this.queries.forEach(function (info, queryId) {\n            store[queryId] = {\n                variables: info.variables,\n                networkStatus: info.networkStatus,\n                networkError: info.networkError,\n                graphQLErrors: info.graphQLErrors,\n            };\n        });\n        return store;\n    };\n    QueryManager.prototype.resetErrors = function (queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo) {\n            queryInfo.networkError = undefined;\n            queryInfo.graphQLErrors = [];\n        }\n    };\n    QueryManager.prototype.transform = function (document) {\n        return this.documentTransform.transformDocument(document);\n    };\n    QueryManager.prototype.getDocumentInfo = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cacheEntry = {\n                hasClientExports: hasClientExports(document),\n                hasForcedResolvers: this.localState.shouldForceResolvers(document),\n                hasNonreactiveDirective: hasDirectives(['nonreactive'], document),\n                clientQuery: this.localState.clientQuery(document),\n                serverQuery: removeDirectivesFromDocument([\n                    { name: 'client', remove: true },\n                    { name: 'connection' },\n                    { name: 'nonreactive' },\n                ], document),\n                defaultVars: getDefaultValues(getOperationDefinition(document)),\n                asQuery: __assign(__assign({}, document), { definitions: document.definitions.map(function (def) {\n                        if (def.kind === \"OperationDefinition\" &&\n                            def.operation !== \"query\") {\n                            return __assign(__assign({}, def), { operation: \"query\" });\n                        }\n                        return def;\n                    }) })\n            };\n            transformCache.set(document, cacheEntry);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.getDocumentInfo(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options) {\n        var query = this.transform(options.query);\n        options = __assign(__assign({}, options), { variables: this.getVariables(query, options.variables) });\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var queryInfo = new QueryInfo(this);\n        var observable = new ObservableQuery({\n            queryManager: this,\n            queryInfo: queryInfo,\n            options: options,\n        });\n        observable['lastQuery'] = query;\n        this.queries.set(observable.queryId, queryInfo);\n        queryInfo.init({\n            document: query,\n            observableQuery: observable,\n            variables: observable.variables,\n        });\n        return observable;\n    };\n    QueryManager.prototype.query = function (options, queryId) {\n        var _this = this;\n        if (queryId === void 0) { queryId = this.generateQueryId(); }\n        invariant(options.query, 26);\n        invariant(options.query.kind === 'Document', 27);\n        invariant(!options.returnPartialData, 28);\n        invariant(!options.pollInterval, 29);\n        return this.fetchQuery(queryId, __assign(__assign({}, options), { query: this.transform(options.query) })).finally(function () { return _this.stopQuery(queryId); });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.queryIdCounter++);\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        return this.requestIdCounter++;\n    };\n    QueryManager.prototype.generateMutationId = function () {\n        return String(this.mutationIdCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo)\n            queryInfo.stop();\n    };\n    QueryManager.prototype.clearStore = function (options) {\n        if (options === void 0) { options = {\n            discardWatches: true,\n        }; }\n        this.cancelPendingFetches(newInvariantError(30));\n        this.queries.forEach(function (queryInfo) {\n            if (queryInfo.observableQuery) {\n                queryInfo.networkStatus = NetworkStatus.loading;\n            }\n            else {\n                queryInfo.stop();\n            }\n        });\n        if (this.mutationStore) {\n            this.mutationStore = Object.create(null);\n        }\n        return this.cache.reset(options);\n    };\n    QueryManager.prototype.getObservableQueries = function (include) {\n        var _this = this;\n        if (include === void 0) { include = \"active\"; }\n        var queries = new Map();\n        var queryNamesAndDocs = new Map();\n        var legacyQueryOptions = new Set();\n        if (Array.isArray(include)) {\n            include.forEach(function (desc) {\n                if (typeof desc === \"string\") {\n                    queryNamesAndDocs.set(desc, false);\n                }\n                else if (isDocumentNode(desc)) {\n                    queryNamesAndDocs.set(_this.transform(desc), false);\n                }\n                else if (isNonNullObject(desc) && desc.query) {\n                    legacyQueryOptions.add(desc);\n                }\n            });\n        }\n        this.queries.forEach(function (_a, queryId) {\n            var oq = _a.observableQuery, document = _a.document;\n            if (oq) {\n                if (include === \"all\") {\n                    queries.set(queryId, oq);\n                    return;\n                }\n                var queryName = oq.queryName, fetchPolicy = oq.options.fetchPolicy;\n                if (fetchPolicy === \"standby\" ||\n                    (include === \"active\" && !oq.hasObservers())) {\n                    return;\n                }\n                if (include === \"active\" ||\n                    (queryName && queryNamesAndDocs.has(queryName)) ||\n                    (document && queryNamesAndDocs.has(document))) {\n                    queries.set(queryId, oq);\n                    if (queryName)\n                        queryNamesAndDocs.set(queryName, true);\n                    if (document)\n                        queryNamesAndDocs.set(document, true);\n                }\n            }\n        });\n        if (legacyQueryOptions.size) {\n            legacyQueryOptions.forEach(function (options) {\n                var queryId = makeUniqueId(\"legacyOneTimeQuery\");\n                var queryInfo = _this.getQuery(queryId).init({\n                    document: options.query,\n                    variables: options.variables,\n                });\n                var oq = new ObservableQuery({\n                    queryManager: _this,\n                    queryInfo: queryInfo,\n                    options: __assign(__assign({}, options), { fetchPolicy: \"network-only\" }),\n                });\n                invariant(oq.queryId === queryId);\n                queryInfo.setObservableQuery(oq);\n                queries.set(queryId, oq);\n            });\n        }\n        if (globalThis.__DEV__ !== false && queryNamesAndDocs.size) {\n            queryNamesAndDocs.forEach(function (included, nameOrDoc) {\n                if (!included) {\n                    globalThis.__DEV__ !== false && invariant.warn(typeof nameOrDoc === \"string\" ? 31 : 32, nameOrDoc);\n                }\n            });\n        }\n        return queries;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.getObservableQueries(includeStandby ? \"all\" : \"active\").forEach(function (observableQuery, queryId) {\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (includeStandby ||\n                (fetchPolicy !== \"standby\" &&\n                    fetchPolicy !== \"cache-only\")) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.getQuery(queryId).setDiff(null);\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.setObservableQuery = function (observableQuery) {\n        this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, errorPolicy = _a.errorPolicy, variables = _a.variables, _b = _a.context, context = _b === void 0 ? {} : _b;\n        query = this.transform(query);\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, context, variables).map(function (result) {\n                if (fetchPolicy !== 'no-cache') {\n                    if (shouldWriteResult(result, errorPolicy)) {\n                        _this.cache.write({\n                            query: query,\n                            result: result.data,\n                            dataId: 'ROOT_SUBSCRIPTION',\n                            variables: variables,\n                        });\n                    }\n                    _this.broadcastQueries();\n                }\n                var hasErrors = graphQLResultHasError(result);\n                var hasProtocolErrors = graphQLResultHasProtocolErrors(result);\n                if (hasErrors || hasProtocolErrors) {\n                    var errors = {};\n                    if (hasErrors) {\n                        errors.graphQLErrors = result.errors;\n                    }\n                    if (hasProtocolErrors) {\n                        errors.protocolErrors = result.extensions[PROTOCOL_ERRORS_SYMBOL];\n                    }\n                    throw new ApolloError(errors);\n                }\n                return result;\n            });\n        };\n        if (this.getDocumentInfo(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables, context).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchCancelFns.delete(queryId);\n        if (this.queries.has(queryId)) {\n            this.getQuery(queryId).stop();\n            this.queries.delete(queryId);\n        }\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        if (this.onBroadcast)\n            this.onBroadcast();\n        this.queries.forEach(function (info) { return info.notify(); });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        var _a;\n        if (deduplication === void 0) { deduplication = (_a = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a !== void 0 ? _a : this.queryDeduplication; }\n        var observable;\n        var _b = this.getDocumentInfo(query), serverQuery = _b.serverQuery, clientQuery = _b.clientQuery;\n        if (serverQuery) {\n            var _c = this, inFlightLinkObservables_1 = _c.inFlightLinkObservables, link = _c.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var printedServerQuery_1 = print(serverQuery);\n                var byVariables_1 = inFlightLinkObservables_1.get(printedServerQuery_1) || new Map();\n                inFlightLinkObservables_1.set(printedServerQuery_1, byVariables_1);\n                var varJson_1 = canonicalStringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    var concast = new Concast([\n                        execute(link, operation)\n                    ]);\n                    byVariables_1.set(varJson_1, observable = concast);\n                    concast.beforeNext(function () {\n                        if (byVariables_1.delete(varJson_1) &&\n                            byVariables_1.size < 1) {\n                            inFlightLinkObservables_1.delete(printedServerQuery_1);\n                        }\n                    });\n                }\n            }\n            else {\n                observable = new Concast([\n                    execute(link, operation)\n                ]);\n            }\n        }\n        else {\n            observable = new Concast([\n                Observable.of({ data: {} })\n            ]);\n            context = this.prepareContext(context);\n        }\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.getResultsFromLink = function (queryInfo, cacheWriteBehavior, options) {\n        var requestId = queryInfo.lastRequestId = this.generateRequestId();\n        var linkDocument = this.cache.transformForLink(options.query);\n        return asyncMap(this.getObservableFromLink(linkDocument, options.context, options.variables), function (result) {\n            var graphQLErrors = getGraphQLErrorsFromResult(result);\n            var hasErrors = graphQLErrors.length > 0;\n            if (requestId >= queryInfo.lastRequestId) {\n                if (hasErrors && options.errorPolicy === \"none\") {\n                    throw queryInfo.markError(new ApolloError({\n                        graphQLErrors: graphQLErrors,\n                    }));\n                }\n                queryInfo.markResult(result, linkDocument, options, cacheWriteBehavior);\n                queryInfo.markReady();\n            }\n            var aqr = {\n                data: result.data,\n                loading: false,\n                networkStatus: NetworkStatus.ready,\n            };\n            if (hasErrors && options.errorPolicy !== \"ignore\") {\n                aqr.errors = graphQLErrors;\n                aqr.networkStatus = NetworkStatus.error;\n            }\n            return aqr;\n        }, function (networkError) {\n            var error = isApolloError(networkError)\n                ? networkError\n                : new ApolloError({ networkError: networkError });\n            if (requestId >= queryInfo.lastRequestId) {\n                queryInfo.markError(error);\n            }\n            throw error;\n        });\n    };\n    QueryManager.prototype.fetchConcastWithInfo = function (queryId, options, networkStatus) {\n        var _this = this;\n        if (networkStatus === void 0) { networkStatus = NetworkStatus.loading; }\n        var query = options.query;\n        var variables = this.getVariables(query, options.variables);\n        var queryInfo = this.getQuery(queryId);\n        var defaults = this.defaultOptions.watchQuery;\n        var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? defaults && defaults.fetchPolicy || \"cache-first\" : _a, _b = options.errorPolicy, errorPolicy = _b === void 0 ? defaults && defaults.errorPolicy || \"none\" : _b, _c = options.returnPartialData, returnPartialData = _c === void 0 ? false : _c, _d = options.notifyOnNetworkStatusChange, notifyOnNetworkStatusChange = _d === void 0 ? false : _d, _e = options.context, context = _e === void 0 ? {} : _e;\n        var normalized = Object.assign({}, options, {\n            query: query,\n            variables: variables,\n            fetchPolicy: fetchPolicy,\n            errorPolicy: errorPolicy,\n            returnPartialData: returnPartialData,\n            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n            context: context,\n        });\n        var fromVariables = function (variables) {\n            normalized.variables = variables;\n            var sourcesWithInfo = _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);\n            if (normalized.fetchPolicy !== \"standby\" &&\n                sourcesWithInfo.sources.length > 0 &&\n                queryInfo.observableQuery) {\n                queryInfo.observableQuery[\"applyNextFetchPolicy\"](\"after-fetch\", options);\n            }\n            return sourcesWithInfo;\n        };\n        var cleanupCancelFn = function () { return _this.fetchCancelFns.delete(queryId); };\n        this.fetchCancelFns.set(queryId, function (reason) {\n            cleanupCancelFn();\n            setTimeout(function () { return concast.cancel(reason); });\n        });\n        var concast, containsDataFromLink;\n        if (this.getDocumentInfo(normalized.query).hasClientExports) {\n            concast = new Concast(this.localState\n                .addExportedVariables(normalized.query, normalized.variables, normalized.context)\n                .then(fromVariables).then(function (sourcesWithInfo) { return sourcesWithInfo.sources; }));\n            containsDataFromLink = true;\n        }\n        else {\n            var sourcesWithInfo = fromVariables(normalized.variables);\n            containsDataFromLink = sourcesWithInfo.fromLink;\n            concast = new Concast(sourcesWithInfo.sources);\n        }\n        concast.promise.then(cleanupCancelFn, cleanupCancelFn);\n        return {\n            concast: concast,\n            fromLink: containsDataFromLink,\n        };\n    };\n    QueryManager.prototype.refetchQueries = function (_a) {\n        var _this = this;\n        var updateCache = _a.updateCache, include = _a.include, _b = _a.optimistic, optimistic = _b === void 0 ? false : _b, _c = _a.removeOptimistic, removeOptimistic = _c === void 0 ? optimistic ? makeUniqueId(\"refetchQueries\") : void 0 : _c, onQueryUpdated = _a.onQueryUpdated;\n        var includedQueriesById = new Map();\n        if (include) {\n            this.getObservableQueries(include).forEach(function (oq, queryId) {\n                includedQueriesById.set(queryId, {\n                    oq: oq,\n                    lastDiff: _this.getQuery(queryId).getDiff(),\n                });\n            });\n        }\n        var results = new Map;\n        if (updateCache) {\n            this.cache.batch({\n                update: updateCache,\n                optimistic: optimistic && removeOptimistic || false,\n                removeOptimistic: removeOptimistic,\n                onWatchUpdated: function (watch, diff, lastDiff) {\n                    var oq = watch.watcher instanceof QueryInfo &&\n                        watch.watcher.observableQuery;\n                    if (oq) {\n                        if (onQueryUpdated) {\n                            includedQueriesById.delete(oq.queryId);\n                            var result = onQueryUpdated(oq, diff, lastDiff);\n                            if (result === true) {\n                                result = oq.refetch();\n                            }\n                            if (result !== false) {\n                                results.set(oq, result);\n                            }\n                            return result;\n                        }\n                        if (onQueryUpdated !== null) {\n                            includedQueriesById.set(oq.queryId, { oq: oq, lastDiff: lastDiff, diff: diff });\n                        }\n                    }\n                },\n            });\n        }\n        if (includedQueriesById.size) {\n            includedQueriesById.forEach(function (_a, queryId) {\n                var oq = _a.oq, lastDiff = _a.lastDiff, diff = _a.diff;\n                var result;\n                if (onQueryUpdated) {\n                    if (!diff) {\n                        var info = oq[\"queryInfo\"];\n                        info.reset();\n                        diff = info.getDiff();\n                    }\n                    result = onQueryUpdated(oq, diff, lastDiff);\n                }\n                if (!onQueryUpdated || result === true) {\n                    result = oq.refetch();\n                }\n                if (result !== false) {\n                    results.set(oq, result);\n                }\n                if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n                    _this.stopQueryNoBroadcast(queryId);\n                }\n            });\n        }\n        if (removeOptimistic) {\n            this.cache.removeOptimistic(removeOptimistic);\n        }\n        return results;\n    };\n    QueryManager.prototype.fetchQueryByPolicy = function (queryInfo, _a, networkStatus) {\n        var _this = this;\n        var query = _a.query, variables = _a.variables, fetchPolicy = _a.fetchPolicy, refetchWritePolicy = _a.refetchWritePolicy, errorPolicy = _a.errorPolicy, returnPartialData = _a.returnPartialData, context = _a.context, notifyOnNetworkStatusChange = _a.notifyOnNetworkStatusChange;\n        var oldNetworkStatus = queryInfo.networkStatus;\n        queryInfo.init({\n            document: query,\n            variables: variables,\n            networkStatus: networkStatus,\n        });\n        var readCache = function () { return queryInfo.getDiff(variables); };\n        var resultsFromCache = function (diff, networkStatus) {\n            if (networkStatus === void 0) { networkStatus = queryInfo.networkStatus || NetworkStatus.loading; }\n            var data = diff.result;\n            if (globalThis.__DEV__ !== false &&\n                !returnPartialData &&\n                !equal(data, {})) {\n                logMissingFieldErrors(diff.missing);\n            }\n            var fromData = function (data) { return Observable.of(__assign({ data: data, loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus }, (diff.complete ? null : { partial: true }))); };\n            if (data && _this.getDocumentInfo(query).hasForcedResolvers) {\n                return _this.localState.runResolvers({\n                    document: query,\n                    remoteResult: { data: data },\n                    context: context,\n                    variables: variables,\n                    onlyRunForcedResolvers: true,\n                }).then(function (resolved) { return fromData(resolved.data || void 0); });\n            }\n            if (errorPolicy === 'none' &&\n                networkStatus === NetworkStatus.refetch &&\n                Array.isArray(diff.missing)) {\n                return fromData(void 0);\n            }\n            return fromData(data);\n        };\n        var cacheWriteBehavior = fetchPolicy === \"no-cache\" ? 0 :\n            (networkStatus === NetworkStatus.refetch &&\n                refetchWritePolicy !== \"merge\") ? 1\n                : 2;\n        var resultsFromLink = function () { return _this.getResultsFromLink(queryInfo, cacheWriteBehavior, {\n            query: query,\n            variables: variables,\n            context: context,\n            fetchPolicy: fetchPolicy,\n            errorPolicy: errorPolicy,\n        }); };\n        var shouldNotify = notifyOnNetworkStatusChange &&\n            typeof oldNetworkStatus === \"number\" &&\n            oldNetworkStatus !== networkStatus &&\n            isNetworkRequestInFlight(networkStatus);\n        switch (fetchPolicy) {\n            default:\n            case \"cache-first\": {\n                var diff = readCache();\n                if (diff.complete) {\n                    return { fromLink: false, sources: [resultsFromCache(diff, queryInfo.markReady())] };\n                }\n                if (returnPartialData || shouldNotify) {\n                    return { fromLink: true, sources: [resultsFromCache(diff), resultsFromLink()] };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            }\n            case \"cache-and-network\": {\n                var diff = readCache();\n                if (diff.complete || returnPartialData || shouldNotify) {\n                    return { fromLink: true, sources: [resultsFromCache(diff), resultsFromLink()] };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            }\n            case \"cache-only\":\n                return { fromLink: false, sources: [resultsFromCache(readCache(), queryInfo.markReady())] };\n            case \"network-only\":\n                if (shouldNotify) {\n                    return { fromLink: true, sources: [resultsFromCache(readCache()), resultsFromLink()] };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            case \"no-cache\":\n                if (shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [\n                            resultsFromCache(queryInfo.getDiff()),\n                            resultsFromLink(),\n                        ],\n                    };\n                }\n                return { fromLink: true, sources: [resultsFromLink()] };\n            case \"standby\":\n                return { fromLink: false, sources: [] };\n        }\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        if (queryId && !this.queries.has(queryId)) {\n            this.queries.set(queryId, new QueryInfo(this, queryId));\n        }\n        return this.queries.get(queryId);\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2387, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/ApolloClient.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { invariant, newInvariantError } from '../utilities/globals/index.js';\nimport { ApolloLink, execute } from '../link/core/index.js';\nimport { version } from '../version.js';\nimport { HttpLink } from '../link/http/index.js';\nimport { QueryManager } from './QueryManager.js';\nimport { LocalState } from './LocalState.js';\nvar hasSuggestedDevtools = false;\nimport { mergeOptions } from \"../utilities/index.js\";\nexport { mergeOptions };\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        if (!options.cache) {\n            throw newInvariantError(13);\n        }\n        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, documentTransform = options.documentTransform, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, _c = options.connectToDevTools, connectToDevTools = _c === void 0 ? typeof window === 'object' &&\n            !window.__APOLLO_CLIENT__ &&\n            globalThis.__DEV__ !== false : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions = options.defaultOptions, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? cache.assumeImmutableResults : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link) {\n            link = uri\n                ? new HttpLink({ uri: uri, credentials: credentials, headers: headers })\n                : ApolloLink.empty();\n        }\n        this.link = link;\n        this.cache = cache;\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        if (connectToDevTools && typeof window === 'object') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && connectToDevTools && globalThis.__DEV__ !== false) {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self &&\n                !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {\n                var nav = window.navigator;\n                var ua = nav && nav.userAgent;\n                var url = void 0;\n                if (typeof ua === \"string\") {\n                    if (ua.indexOf(\"Chrome/\") > -1) {\n                        url = \"https://chrome.google.com/webstore/detail/\" +\n                            \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n                    }\n                    else if (ua.indexOf(\"Firefox/\") > -1) {\n                        url = \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n                    }\n                }\n                if (url) {\n                    globalThis.__DEV__ !== false && invariant.log(\"Download the Apollo DevTools for a better development \" +\n                        \"experience: %s\", url);\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            cache: this.cache,\n            link: this.link,\n            defaultOptions: this.defaultOptions,\n            documentTransform: documentTransform,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: connectToDevTools ? function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.getQueryStore(),\n                            mutations: _this.queryManager.mutationStore || {},\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            } : void 0,\n        });\n    }\n    Object.defineProperty(ApolloClient.prototype, \"documentTransform\", {\n        get: function () {\n            return this.queryManager.documentTransform;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = mergeOptions(this.defaultOptions.watchQuery, options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = mergeOptions(this.defaultOptions.query, options);\n        }\n        invariant(options.fetchPolicy !== 'cache-and-network', 14);\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = mergeOptions(this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var ref = this.cache.writeQuery(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var ref = this.cache.writeFragment(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore({\n            discardWatches: false,\n        }); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore({\n            discardWatches: true,\n        }); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.refetchQueries = function (options) {\n        var map = this.queryManager.refetchQueries(options);\n        var queries = [];\n        var results = [];\n        map.forEach(function (result, obsQuery) {\n            queries.push(obsQuery);\n            results.push(result);\n        });\n        var result = Promise.all(results);\n        result.queries = queries;\n        result.results = results;\n        result.catch(function (error) {\n            globalThis.__DEV__ !== false && invariant.debug(15, error);\n        });\n        return result;\n    };\n    ApolloClient.prototype.getObservableQueries = function (include) {\n        if (include === void 0) { include = \"active\"; }\n        return this.queryManager.getObservableQueries(include);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    ApolloClient.prototype.setLink = function (newLink) {\n        this.link = this.queryManager.link = newLink;\n    };\n    return ApolloClient;\n}());\nexport { ApolloClient };\n//# sourceMappingURL=ApolloClient.js.map"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2670, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/client/core/index.js"],"sourcesContent":["export { ApolloClient, mergeOptions } from \"./ApolloClient.js\";\nexport { ObservableQuery } from \"./ObservableQuery.js\";\nexport { NetworkStatus, isNetworkRequestSettled } from \"./networkStatus.js\";\nexport * from \"./types.js\";\nexport { isApolloError, ApolloError } from \"../errors/index.js\";\nexport { Cache, ApolloCache, InMemoryCache, MissingFieldError, defaultDataIdFromObject, makeVar, } from \"../cache/index.js\";\nexport * from \"../cache/inmemory/types.js\";\nexport * from \"../link/core/index.js\";\nexport * from \"../link/http/index.js\";\nexport { fromError, toPromise, fromPromise, throwServerError, } from \"../link/utils/index.js\";\nexport { DocumentTransform, Observable, isReference, makeReference, } from \"../utilities/index.js\";\nimport { setVerbosity } from \"ts-invariant\";\nexport { setVerbosity as setLogVerbosity };\nsetVerbosity(globalThis.__DEV__ !== false ? \"log\" : \"silent\");\nexport { gql, resetCaches, disableFragmentWarnings, enableExperimentalFragmentVariables, disableExperimentalFragmentVariables, } from \"graphql-tag\";\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,gJAAa,WAAW,OAAO,KAAK,QAAQ,QAAQ;;CAEpD,iCAAiC"}},
    {"offset": {"line": 2747, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}